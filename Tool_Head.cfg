# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu EBBCan]
canbus_uuid: 1add5f75bd7c

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: x,y,z

[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
##	Update value below when you perform extruder calibration
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#rotation_distance: 5.5914590747 #LGX Lite
#rotation_distance: 22.6501121498	#Bondtech 5mm Drive Gears - CW2
rotation_distance: 46.963 #Galileo 2
##	Update Gear Ratio depending on your Extruder Type
##	Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##	Use 80:20 for M4, M3.1
gear_ratio: 9:1				#BMG Gear Ratio
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 1.0
filament_diameter: 1.75
heater_pin: EBBCan: PB13
##	Validate the following thermistor type to make sure it is correct
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: EBBCan: PA3
#adc_voltage: 5
#   The ADC comparison voltage (in Volts). The default is 5 volts.
#voltage_offset: 0
min_temp: 0
max_temp: 300
max_power: 1.0
min_extrude_temp: 15
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##	Try to keep pressure_advance below 1.0
pressure_advance: 0.03
##	Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040
max_extrude_only_distance: 500.0
max_extrude_cross_section: 30
##	E0 on MOTOR6
##	Make sure to update below for your relevant driver (2208 or 2209)

[tmc2209 extruder]
uart_pin: EBBCan: PA15
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

[high_resolution_filament_sensor roadrunner]
extruder: extruder
#  The extruder to which this sensor is attached
#uart_rx_pin: P0.0
#uart_tx_pin: P0.1
#  TX and RX pins for UART communication, leave out if i2c or USB serial is used (see below).
i2c_address: 64
#  The address of the sensor on the I2C bus, the default is 64 (0x40). Only
#  change this if you attach more than one sensor on the same I2C bus.
i2c_mcu: EBBCan
#  The mcu on which the sensor is connected.
i2c_bus: i2c3_PB3_PB4
#  The I2C bus to which the sensor is connected on the mcu.
#serial: /dev/serial/by-id/usb-Raspberry_Pi_Pico_E66130100F655734-if00
#  The serial port over which the sensor is connected. Find with `ls -alh /dev/serial/by-id`.
pause_on_runout: False
#  Whether or not to pause the print automatically when a runout
#  condition is triggered.
runout_gcode: RESPOND TYPE=command MSG='Filament runout detected'
#  The gcode to execute when a runout condition is detected.
invert_direction: False
# If the measured distance/speed values are negative, change this to True.
rotation_distance: 23.3732877
# The length of filament which corresponds to a full 360 degree rotation
# of the magnet over the rotary encoder. A good starting point is the
# circumference of the BMG gears in the sensor.
underextrusion_max_rate: 0.5
# What rate of underextrusion can be tolerated, as a value between 0.0 and 1.0.
# The rate is calculated by comparing the extruder position to the measured
# filament length over a certain period. A rate of 0.0 means the measured
# filament motion matches the expected extrusion distance over the period.
# A rate of 1.0 means no filament motion was detected at all when some motion
# was expected for the extruder.
underextrusion_period: 5
# How long should the underextrusion rate stay above the max rate before
# a runout is triggered.
hysteresis_bits: 3
# How many bits to ignore from the magnetic rotary encoder's angle data.
# This setting determines the minimum detectable change in position
# for the sensor. Configuring this too low can result in flapping between
# two adjacent positions even when the filament is not moving.

[filament_motion_sensor roadrunner_motion]
detection_length: 2
extruder: extruder
switch_pin: virtual_motion_sensor:roadrunner
pause_on_runout: True
runout_gcode: 
    RESPOND TYPE=command MSG='Filament motion sensor detected a runout'
    status_error  # Turn LEDs red
event_delay: 0.1

[filament_switch_sensor roadrunner_switch]
switch_pin: virtual_switch_sensor:roadrunner 
pause_on_runout: True
insert_gcode:
    RESPOND TYPE=command MSG='Filament switch sensor detected filament is now present'
    status_printing  
runout_gcode: 
    RESPOND TYPE=command MSG='Filament switch sensor detected filament is no longer present'
    status_error  # Turn LEDs red
event_delay: 0.1

    
## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

[fan]
pin: EBBCan: PA0
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
pin: EBBCan: PA1
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
tachometer_pin: ^EBBCan: PB9
tachometer_ppr: 2
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

#[neopixel hotend_rgb]
#pin: EBBCan:PD3

#[bltouch]
#sensor_pin: ^EBBCan:PB8
#control_pin: EBBCan:PB9

#[filament_switch_sensor switch_sensor]
#switch_pin: EBBCan:PB4

#[filament_motion_sensor motion_sensor]
#switch_pin: ^EBBCan:PB3